<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCADwAUADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7G3U1nVaXNQyHdWPMAjS/3aY0rbaZtbdTWjZqkCFm+b5qcnzM
        u5ttSeQ235mpyRKv3qkkRpI9qqrM1VLlmb5VqSf5fu1XaRl/iqiiFo/l+aT/AIDVG5ttzLt+7/FVyRWZ
        t1RyRyMu5mqyTPa3+ba23bUMkKqvyrV3Ztbc3zf8CqGc7vuqtVzMDPkjYL92qc8aovzVoyfN/FVZljT+
        GtISAyJAfm+XdVVkk/hVq22Kr/DUbFf7tV7Uy5TFa2mZfmDVDJbMvzM9bLKu371V5Il/hq/aD5TGaH/Z
        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
        oAkZqb/DTM0zdQA9qYzU1mpu6gB275qbupu75qbuoAfmjNRbqN1AD6ZTd1G6gB1G5qbuooAk3NuqRJ5F
        /wBpar5oqQPPWb5vmo/2qGVt23+7R96oOgE+7TopNrbqbu/2aO9AEjNubd/FTkb7u371Q7qdmqA6Lwy2
        mxszahHJI25fLaP5v9qr08tveTL9h2+Y3mbV3bd1cvaztH/q1+b+Ha1aVjPM00flqqqv3l/h/wDsqkD0
        nw3FJa6XHHcfK237v92tLzFH3a45PEdwW+aJdq/3f4v9mteHWtP3Luutv93crUcxlKMjW80bvvfLTfMH
        3d33f+BVRn1GzWPdHdRt/wACptncPcr5isqx/wC9uoJ5ZF9pN1R79tNb5f4qj8xdu5fu/wALVQhzSbWq
        NpPmbdUbN/wGo2bb8rfw0xEzPUbSf3mqNmXd8zf71RSSRsu1mVqAJ0l8xd1N8ys3e0beXG21d38K/NVp
        PlX5pNzf3mpDJGkprNTM1EzVZBMzVHupu9m/3qTfQA9m/wB6m7qZmmeZQBJu3Umai3U1moAk3U1mpu6k
        zQA/dTd1R7qGagCTdSZqLdRuoAlzTN1N3UbqCx26jdUe6jdQA7dRupu6jdQBwv8AeZabub7tH8NH+1WR
        0Bup3am7vmp25aABF3NUiLtXdTRG23cvzVNB/d+9QBJBHtbcy/LVpGWP5drblqujKjbV+ZWprP8AN96k
        UX4p/l+Vvm/vf3avWs6qGZvmX/arn4mZvu1cS4k27dzfd+b/AGqiURGqs8077Y2+9/erpPD/AJOnlvOm
        aRpl/h+6tcnaTr5qybVjb/dq9NdwrB8yszbtyt/DVIJm/rmpojLa27fvJPvbm20QXEkVrGtxtVpPlVd3
        /jtcolx5tx50zfeb7y1NJebrpWVW2x/w0uYz5Dd+3+WzRtI25W3fNVhLpZZFa3kVl/irm7uZZ2jk27f4
        f+A1HBcbZFjWRl+bdu20cwezN6+nZQyxt8zfdVW21VRZpZP3jeWrfdXdWXLfSYk+Zt1FrcsrL/Cy/wAV
        Lm94rl5Ym+reRbqu75lX5qWCT5VZm+Zl/vVViljdW8ybcv3lpfNWT5V/4DWhkW/M96a0nvVVrlV2rj73
        /jtVW1JFby23K392q5mRyyNLOabuqnaz+ZtX/vn5qsbuacZcwSjyj91Jmot3y03d81UST5qLdTd3zUma
        AJPMpm6o91G6gsk3U3d/9jUe6jdQQS5ozUW6jdQBLmmbqbupu6gCTdRuqPdSZoLJd1N3U3dRuoA4v+Cm
        0770e6m/e+WpOocn92nbf7tCU7+H5qgkdF8rVJ3qHd8tO3UASI235qPvNUIbdTt1AE0Um3btWnbvm3N8
        rVXibc33quIu9VWkUOiZm27V3NUk8sy/eoSNY/mVttMn2/e3M397dWYD97feb5qEn2My7flZfl21XZmW
        Nd1OiZt3zLt3fdoJJ1m/vNuWo5LiNo/7zf7NV2kZdvP+6tR+YarlKLsG5l/2mX5fm+9U0TLF8y7m21Ti
        lVVXy1/4Fuqx8vl/xM3+1UAWvtPytH/C3/jtWrW+2qqszbax2b5WVfl+b71ORm27fvKv8VMk0pLtlkVV
        2su771V5ZFl+Zm27aqpIy/w/K3/jtRozM3ys22kUX7VpFkbyZNvy/NWtBLlfvM3+9WEOWX+H5avte7YV
        YL/D/eqoS5TOUeYvJOrd6cze9ZP24tHu2/8AjtWIrlpVVlH+y1V7Qj2ZcR93y4ajK1BJL5bdfl/8eWiK
        Xf8ALmq5ieUm3U1vvUmaM1qIWjdSZpm6gB+aM0zd8tG6gB+aZuo/2abuoAduo3U3dRuoAfSbqbQjUAf/
        2Q==
</value>
  </data>
</root>